class Piece:
    def __init__(self, color):
        self.color = color

    def __str__(self):
        return self.__class__.__name__[0]

class King(Piece):
    pass

class Queen(Piece):
    pass

class Rook(Piece):
    pass

class Bishop(Piece):
    pass

class Knight(Piece):
    pass

class Pawn(Piece):
    pass

class Board:
    def __init__(self):
        self.board = [[None for _ in range(8)] for _ in range(8)]
        self.setup_board()

    def setup_board(self):
        # Setup the pieces for the black side
        self.board[0] = [
            Rook('black'), Knight('black'), Bishop('black'), Queen('black'),
            King('black'), Bishop('black'), Knight('black'), Rook('black')
        ]
        self.board[1] = [Pawn('black') for _ in range(8)]

        # Setup the pieces for the white side
        self.board[7] = [
            Rook('white'), Knight('white'), Bishop('white'), Queen('white'),
            King('white'), Bishop('white'), Knight('white'), Rook('white')
        ]
        self.board[6] = [Pawn('white') for _ in range(8)]

    def display(self):
        for row in self.board:
            print(" ".join(str(piece) if piece else '.' for piece in row))

class Game:
    def __init__(self):
        self.board = Board()

    def start(self):
        self.board.display()

if __name__ == "__main__":
    game = Game()
    game.start()
